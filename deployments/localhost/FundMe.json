{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x94c7c89f30e35851c1749ed3d6c484fbda6d0119a99f17af60e03cb397264581",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1076414",
    "logsBloom": "0x
    "blockHash": "0x6086e48e48f6bacf4d522853033be5597f7a2c62b8ac35e40a3f5663da66cc8a",
    "transactionHash": "0x94c7c89f30e35851c1749ed3d6c484fbda6d0119a99f17af60e03cb397264581",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1076414",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "560543d67009f34150e3ec8412b55228",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"this implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Demos a sample crowd funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @notice Demos a sample crowd funding contract\\n * @dev this implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    constructor(address priceFeedAddress) {\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        // reset funders and address to amount funded array\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        // send funds to contract owner's wallet\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            ++funderIndex\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // send funds to contract owner's wallet\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xa89607c9dc64c7b0c2e6e39b8ab995b29f055124a083a320766b40a48d5f1f9d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xc5c8ba8e83dad0db435ab022ceb177b2cb26e49ec91db0e8aa8dfdb459110f90\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013a2380380620013a2833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61121c62000186600039600081816102c00152818161050f01528181610699015261082d015261121c6000f3fe6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101285780639e87a5cd14610153578063b60d42881461017e578063be2693f014610188578063d7b4750c1461019257610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a592146100fd575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b27565b6101cf565b6040516100bf9190610b6d565b60405180910390f35b3480156100d457600080fd5b506100dd610217565b6040516100ea9190610b6d565b60405180910390f35b6100fb6102be565b005b34801561010957600080fd5b506101126104fe565b60405161011f9190610b6d565b60405180910390f35b34801561013457600080fd5b5061013d61050b565b60405161014a9190610b97565b60405180910390f35b34801561015f57600080fd5b50610168610533565b6040516101759190610c11565b60405180910390f35b61018661055d565b005b610190610697565b005b34801561019e57600080fd5b506101b960048036038101906101b49190610c58565b6108f9565b6040516101c69190610b97565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610c9a565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610343576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103ee5760006001828154811061036957610368610cc7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103e690610d25565b915050610346565b50600067ffffffffffffffff81111561040a57610409610d6e565b5b6040519080825280602002602001820160405280156104385781602001602082028036833780820191505090505b506001908051906020019061044e929190610a1d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047590610dce565b60006040518083038185875af1925050503d80600081146104b2576040519150601f19603f3d011682016040523d82523d6000602084013e6104b7565b606091505b50509050806104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290610e40565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061059c600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461094190919063ffffffff16565b10156105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490610eac565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062b9190610ecc565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610756575b5050505050905060005b81518110156108285760008282815181106107c8576107c7610cc7565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508061082190610d25565b90506107aa565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161086f90610dce565b60006040518083038185875af1925050503d80600081146108ac576040519150601f19603f3d011682016040523d82523d6000602084013e6108b1565b606091505b50509050806108f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ec90610e40565b60405180910390fd5b5050565b60006001828154811061090f5761090e610cc7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061094d8361097d565b90506000670de0b6b3a764000085836109669190610f22565b6109709190610fab565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109c657600080fd5b505afa1580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe9190611054565b5050509150506402540be40081610a1591906110cf565b915050919050565b828054828255906000526020600020908101928215610a96579160200282015b82811115610a955782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a3d565b5b509050610aa39190610aa7565b5090565b5b80821115610ac0576000816000905550600101610aa8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af482610ac9565b9050919050565b610b0481610ae9565b8114610b0f57600080fd5b50565b600081359050610b2181610afb565b92915050565b600060208284031215610b3d57610b3c610ac4565b5b6000610b4b84828501610b12565b91505092915050565b6000819050919050565b610b6781610b54565b82525050565b6000602082019050610b826000830184610b5e565b92915050565b610b9181610ae9565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b6000819050919050565b6000610bd7610bd2610bcd84610ac9565b610bb2565b610ac9565b9050919050565b6000610be982610bbc565b9050919050565b6000610bfb82610bde565b9050919050565b610c0b81610bf0565b82525050565b6000602082019050610c266000830184610c02565b92915050565b610c3581610b54565b8114610c4057600080fd5b50565b600081359050610c5281610c2c565b92915050565b600060208284031215610c6e57610c6d610ac4565b5b6000610c7c84828501610c43565b91505092915050565b600081519050610c9481610c2c565b92915050565b600060208284031215610cb057610caf610ac4565b5b6000610cbe84828501610c85565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3082610b54565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6357610d62610cf6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610db8600083610d9d565b9150610dc382610da8565b600082019050919050565b6000610dd982610dab565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e2a600b83610de3565b9150610e3582610df4565b602082019050919050565b60006020820190508181036000830152610e5981610e1d565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e96601b83610de3565b9150610ea182610e60565b602082019050919050565b60006020820190508181036000830152610ec581610e89565b9050919050565b6000610ed782610b54565b9150610ee283610b54565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f1757610f16610cf6565b5b828201905092915050565b6000610f2d82610b54565b9150610f3883610b54565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f7157610f70610cf6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fb682610b54565b9150610fc183610b54565b925082610fd157610fd0610f7c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ffb81610fdc565b811461100657600080fd5b50565b60008151905061101881610ff2565b92915050565b6000819050919050565b6110318161101e565b811461103c57600080fd5b50565b60008151905061104e81611028565b92915050565b600080600080600060a086880312156110705761106f610ac4565b5b600061107e88828901611009565b955050602061108f8882890161103f565b94505060406110a088828901610c85565b93505060606110b188828901610c85565b92505060806110c288828901611009565b9150509295509295909350565b60006110da8261101e565b91506110e58361101e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112457611123610cf6565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116157611160610cf6565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561119e5761119d610cf6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111db576111da610cf6565b5b82820290509291505056fea2646970667358221220f53e151e72df1ad4f24c1ab58ddd68147ea33f5947e54a6c0ad1d489dcc5b45764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101285780639e87a5cd14610153578063b60d42881461017e578063be2693f014610188578063d7b4750c1461019257610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a592146100fd575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b27565b6101cf565b6040516100bf9190610b6d565b60405180910390f35b3480156100d457600080fd5b506100dd610217565b6040516100ea9190610b6d565b60405180910390f35b6100fb6102be565b005b34801561010957600080fd5b506101126104fe565b60405161011f9190610b6d565b60405180910390f35b34801561013457600080fd5b5061013d61050b565b60405161014a9190610b97565b60405180910390f35b34801561015f57600080fd5b50610168610533565b6040516101759190610c11565b60405180910390f35b61018661055d565b005b610190610697565b005b34801561019e57600080fd5b506101b960048036038101906101b49190610c58565b6108f9565b6040516101c69190610b97565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610c9a565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610343576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103ee5760006001828154811061036957610368610cc7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103e690610d25565b915050610346565b50600067ffffffffffffffff81111561040a57610409610d6e565b5b6040519080825280602002602001820160405280156104385781602001602082028036833780820191505090505b506001908051906020019061044e929190610a1d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047590610dce565b60006040518083038185875af1925050503d80600081146104b2576040519150601f19603f3d011682016040523d82523d6000602084013e6104b7565b606091505b50509050806104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290610e40565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061059c600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461094190919063ffffffff16565b10156105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490610eac565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062b9190610ecc565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610756575b5050505050905060005b81518110156108285760008282815181106107c8576107c7610cc7565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508061082190610d25565b90506107aa565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161086f90610dce565b60006040518083038185875af1925050503d80600081146108ac576040519150601f19603f3d011682016040523d82523d6000602084013e6108b1565b606091505b50509050806108f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ec90610e40565b60405180910390fd5b5050565b60006001828154811061090f5761090e610cc7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061094d8361097d565b90506000670de0b6b3a764000085836109669190610f22565b6109709190610fab565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109c657600080fd5b505afa1580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe9190611054565b5050509150506402540be40081610a1591906110cf565b915050919050565b828054828255906000526020600020908101928215610a96579160200282015b82811115610a955782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a3d565b5b509050610aa39190610aa7565b5090565b5b80821115610ac0576000816000905550600101610aa8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af482610ac9565b9050919050565b610b0481610ae9565b8114610b0f57600080fd5b50565b600081359050610b2181610afb565b92915050565b600060208284031215610b3d57610b3c610ac4565b5b6000610b4b84828501610b12565b91505092915050565b6000819050919050565b610b6781610b54565b82525050565b6000602082019050610b826000830184610b5e565b92915050565b610b9181610ae9565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b6000819050919050565b6000610bd7610bd2610bcd84610ac9565b610bb2565b610ac9565b9050919050565b6000610be982610bbc565b9050919050565b6000610bfb82610bde565b9050919050565b610c0b81610bf0565b82525050565b6000602082019050610c266000830184610c02565b92915050565b610c3581610b54565b8114610c4057600080fd5b50565b600081359050610c5281610c2c565b92915050565b600060208284031215610c6e57610c6d610ac4565b5b6000610c7c84828501610c43565b91505092915050565b600081519050610c9481610c2c565b92915050565b600060208284031215610cb057610caf610ac4565b5b6000610cbe84828501610c85565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d3082610b54565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6357610d62610cf6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610db8600083610d9d565b9150610dc382610da8565b600082019050919050565b6000610dd982610dab565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e2a600b83610de3565b9150610e3582610df4565b602082019050919050565b60006020820190508181036000830152610e5981610e1d565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e96601b83610de3565b9150610ea182610e60565b602082019050919050565b60006020820190508181036000830152610ec581610e89565b9050919050565b6000610ed782610b54565b9150610ee283610b54565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f1757610f16610cf6565b5b828201905092915050565b6000610f2d82610b54565b9150610f3883610b54565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f7157610f70610cf6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fb682610b54565b9150610fc183610b54565b925082610fd157610fd0610f7c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ffb81610fdc565b811461100657600080fd5b50565b60008151905061101881610ff2565b92915050565b6000819050919050565b6110318161101e565b811461103c57600080fd5b50565b60008151905061104e81611028565b92915050565b600080600080600060a086880312156110705761106f610ac4565b5b600061107e88828901611009565b955050602061108f8882890161103f565b94505060406110a088828901610c85565b93505060606110b188828901610c85565b92505060806110c288828901611009565b9150509295509295909350565b60006110da8261101e565b91506110e58361101e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112457611123610cf6565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116157611160610cf6565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561119e5761119d610cf6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111db576111da610cf6565b5b82820290509291505056fea2646970667358221220f53e151e72df1ad4f24c1ab58ddd68147ea33f5947e54a6c0ad1d489dcc5b45764736f6c63430008080033",
  "devdoc": {
    "details": "this implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Demos a sample crowd funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}